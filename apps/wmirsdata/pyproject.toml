# https://toml.io/en/v1.0.0
# https://peps.python.org/pep-0621/
# https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html
# https://validate-pyproject.readthedocs.io/en/latest/schemas.html

[build-system]
build-backend = "setuptools.build_meta"
requires = [
  "setuptools",
  "setuptools_scm[toml]"
]

[project]
authors = [
  {name = "Lance Finn Helsten", email = "lhelsten@cap.gov"}
]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Environment :: Console",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: Apache Software License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.13",
  "Topic :: Education",
  "Topic :: File Formats",
  "Topic :: File Formats :: JSON :: JSON Schema",
  "Topic :: Scientific/Engineering",
  "Topic :: Scientific/Engineering :: Atmospheric Science"
]
dependencies = [
]
description = "Data conversion and validation of tabular data files to JSON for upload to WMIRS"
dynamic = ["version"]
keywords = ["NASA", "CAP", "weather", "data"]
name = "wmirsdata"
readme = "README.rst"
requires-python = ">=3.13"

[project.optional-dependencies]
dev = [
  "pytest~=8.0",
  "pytest-httpx~=0.35",
  "pytest-cov~=6.0",
  "coverage~=7.6",
  "isort~=5.13",
  "black~=23.11",
  "pylint~=3.3",
  "pre-commit~=3.5"
]
docs = [
  "docutils",
  "Sphinx",
  "sphinx-sitemap",
  "pydata_sphinx_theme",
  "sphinxcontrib-plantuml",
  "towncrier",
  "gitpython"
]

[project.scripts]
wmirsdata = "wmirsdata.cli:main"

[project.urls]
"Bug Tracker" = "https://github.com/CAP-RMR-UT/nasa-weather-contrail.git/issues"
"Homepage" = "https://github.com/CAP-RMR-UT/nasa-weather-contrail.git/apps/wmirsdata"

[tool.black]
extend-exclude = '''
    reference-design/.+/.+\.py
'''
include = '\.pyi?$'
line-length = 88
target-version = ['py39']

[tool.coverage.run]
include = [
  "src/**/*.py"
]

[tool.isort]
force_grid_wrap = 0
include_trailing_comma = true
line_length = 88
multi_line_output = 3
profile = "black"
use_parentheses = true

[tool.pytest.ini_options]
addopts = "--strict-markers"
log_cli = true
log_cli_level = "INFO"
markers = [
  "smoke: Marks tests as part of the smoke test phase",
  "predeploy: Marks tests as part of the predeploy test phase",
  "postdeploy: Marks tests as part of the postdeploy test phase",
  "integration: Marks tests as part of the integration test suite",
  "functional: Marks tests as part of the functional test suite",
  "acceptance: Marks tests as part of the acceptance test suite"
]
minversion = "6.0"
pythonpath = []
testpaths = []

[tool.setuptools_scm]
fallback_version = "0.0"
